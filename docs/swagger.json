{
  "openapi": "3.0.0",
  "info": {
    "title": "ptx-dataspace-connector",
    "version": "1.9.0",
    "description": "Prometheus-X Data Space Connector"
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Login to use private routes",
        "tags": [
          "Authentication"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secretKey": {
                    "description": "PTX secret Key",
                    "type": "string"
                  },
                  "serviceKey": {
                    "description": "PTX service Key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "description": "timestamp of the response",
                      "example": 1709025673657
                    },
                    "code": {
                      "type": "integer",
                      "description": "http code of the response",
                      "example": 200
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXJ2aWNlS2V5IjoiMXRBVGlLN0UzQTFIM2Rfd0lpVVhPdExDS2tXWlpLQV9wMlgwZ3drRG1GeHBmQ0Y0STNJc2xyZG1rUERfMzhhVFRyQXpJUVVMaXhVV2NCSWxCRnlCY3lVOHN4RFJVWk1YX09UYyIsImlhdCI6MTcwOTAyNTY3MzY1NCwiZXhwIjoxNzA5MDI1NjczOTU0fQ.WI2KCtxOvnoffBgB5QSYL5ClDLblKORAcYb5SQR-Nqw"
                        },
                        "refreshToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzZXJ2aWNlS2V5IjoiMXRBVGlLN0UzQTFIM2Rfd0lpVVhPdExDS2tXWlpLQV9wMlgwZ3drRG1GeHBmQ0Y0STNJc2xyZG1rUERfMzhhVFRyQXpJUVVMaXhVV2NCSWxCRnlCY3lVOHN4RFJVWk1YX09UYyIsImlhdCI6MTcwOTAyNTY3MzY1NiwiZXhwIjoxNzA5MDI1NjczOTU2fQ.0SR4p7cXlFwK45rky0TnI9kZhvyJJVezUYO4s9Mv03o"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "routes path",
                      "example": "/login"
                    },
                    "statusCode": {
                      "type": "integer",
                      "description": "http code of the response",
                      "example": 404
                    },
                    "error": {
                      "type": "string",
                      "description": "error type",
                      "example": "resource not found"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "status of the reponses",
                      "example": false
                    },
                    "statusText": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "message": {
                      "type": "string",
                      "description": "message of the error",
                      "example": "Wrong credentials"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consent/export": {
      "post": {
        "summary": "export consent",
        "tags": [
          "Consent"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "encrypted key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/consent/import": {
      "post": {
        "summary": "import consent",
        "tags": [
          "Consent"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "dataProviderEndpoint": {
                    "description": "export url",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "AES key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/consumer/exchange": {
      "post": {
        "summary": "Trigger data exchange between two connector",
        "tags": [
          "Consumer"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "200": {
            "description": "Successful response"
          },
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contract": {
                    "description": "Contract self-description",
                    "type": "string",
                    "required": true,
                    "example": "https://contract.com/contracts/id"
                  },
                  "purposeId": {
                    "description": "consumer service offering URI",
                    "type": "string",
                    "required": false,
                    "example": "https://catalog.api.com/v1/catalog/serviceofferings/id"
                  },
                  "resourceId": {
                    "description": "provider service offering URI",
                    "type": "string",
                    "required": false,
                    "example": "https://catalog.api.com/v1/catalog/serviceofferings/id"
                  },
                  "dataProcessingId": {
                    "description": "id of the selected data processing chains in the contract",
                    "type": "string",
                    "required": false,
                    "example": "670e8eb6b439a2379f290fc6"
                  },
                  "resources": {
                    "description": "array of provider data resource URI",
                    "type": "array",
                    "required": false,
                    "example": [
                      {
                        "resource": "https://catalog.api.com/v1/catalog/dataresources/id",
                        "params": {
                          "query": [
                            {
                              "page": 0
                            },
                            {
                              "limit": 10
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "providerParams": {
                    "description": "object of query params",
                    "type": "object",
                    "required": false,
                    "example": {
                      "query": [
                        {
                          "page": 0
                        },
                        {
                          "limit": 10
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consumer/import": {
      "post": {
        "summary": "Endpoint to import data",
        "tags": [
          "Consumer"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "200": {
              "description": "Successful response"
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataExchangeId": {
                    "description": "data exchange id",
                    "type": "string"
                  },
                  "data": {
                    "description": "data",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/export": {
      "post": {
        "summary": "export data",
        "tags": [
          "Data"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/data/import": {
      "post": {
        "summary": "import data",
        "tags": [
          "Data"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signedConsent": {
                    "description": "signed consent",
                    "type": "string"
                  },
                  "user": {
                    "description": "user",
                    "type": "string"
                  },
                  "data": {
                    "description": "data",
                    "type": "string"
                  },
                  "encrypted": {
                    "description": "AES key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/": {
      "get": {
        "summary": "Get all data exchange",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/dataexchanges/{id}": {
      "get": {
        "summary": "Get data exchange by id",
        "tags": [
          "Data-Exchange"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "data exchange id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get Data space Connector Self Description",
        "tags": [
          "Self-Description"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/provider/export": {
      "post": {
        "summary": "Provider exchange webhook",
        "tags": [
          "Provider"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dataExchangeId": {
                    "description": "data exchange id",
                    "type": "string"
                  },
                  "consumerEndpoint": {
                    "description": "Consumer self-description",
                    "type": "string"
                  },
                  "contract": {
                    "description": "contract self-description",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/provider/import": {
      "post": {
        "summary": "Provider import webhook",
        "tags": [
          "Provider"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "description": "data to import",
                    "type": "string"
                  },
                  "dataExchange": {
                    "description": "dataExchange",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/users/template": {
      "post": {
        "summary": "Get the default csv file",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/catalogs/": {
      "get": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "Create a resource",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "resource id of the resource",
                    "type": "string"
                  },
                  "endpoint": {
                    "description": "endpoint of the resource",
                    "type": "string"
                  },
                  "type": {
                    "description": "type of the resource",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/catalogs/{id}": {
      "get": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "catalog id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "summary": "Get Data space Connector catalog",
        "tags": [
          "Catalogs"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "catalog id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "enable or disable the catalog line",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/": {
      "get": {
        "summary": "get the configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration": {
      "put": {
        "summary": "update configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "endpoint of the data space connector",
                    "type": "string"
                  },
                  "serviceKey": {
                    "description": "service key of the participant provided by the catalog",
                    "type": "string"
                  },
                  "secretKey": {
                    "description": "secret key of the participant provided by the catalog",
                    "type": "string"
                  },
                  "catalogUri": {
                    "description": "endpoint of the catalog",
                    "type": "string"
                  },
                  "contractUri": {
                    "description": "endpoint of the contract manager",
                    "type": "string"
                  },
                  "consentUri": {
                    "description": "endpoint of the consent manager",
                    "type": "string"
                  },
                  "registrationUri": {
                    "description": "endpoint of app participant to register user from consent",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "delete": {
        "summary": "delete configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/consent": {
      "put": {
        "summary": "update consent configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "description": "Base64 RSA public key",
                    "type": "string"
                  },
                  "uri": {
                    "description": "consent manager uri",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/reload": {
      "post": {
        "summary": "reload the configuration from config.json file",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/cors": {
      "post": {
        "summary": "add a cors configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "origin": {
                    "description": "Origin of the PDI modal",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/configuration/cors/{id}": {
      "delete": {
        "summary": "remove a cors configuration",
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "data exchange id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/": {
      "post": {
        "summary": "Give consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "triggerDataExchange",
            "description": "trigger the data exchange in the same time than the consent.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privacyNoticeId": {
                    "required": true,
                    "description": "privacy notice id",
                    "type": "string"
                  },
                  "userId": {
                    "required": true,
                    "description": "user id from your system",
                    "type": "string"
                  },
                  "email": {
                    "description": "email to reattach the user",
                    "type": "string"
                  },
                  "dataProcessingId": {
                    "description": "selected data processing",
                    "type": "string"
                  },
                  "data": {
                    "required": true,
                    "description": "selected data",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/exchanges/{as}": {
      "get": {
        "summary": "Get available exchanges",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "as",
            "description": "as provider or consumer.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "internal id.",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/me": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/{consentId}": {
      "delete": {
        "summary": "revoke consent by id",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "consentId",
            "description": "consent id to revoke.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/me/{id}": {
      "get": {
        "summary": "Get user consent by id",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/privacy-notices/{privacyNoticeId}": {
      "get": {
        "summary": "Get user privacy notices",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "privacyNoticeId",
            "description": "privacy notice id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "internal id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{consentId}/data-exchange": {
      "post": {
        "summary": "Trigger the data exchange by the user based on a consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consentId",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "required": true,
                    "description": "user id from your system",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/participants/{userId}": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/participants/{userId}/{id}": {
      "get": {
        "summary": "Get user consent",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "consent id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/consent/{userId}/{providerSd}/{consumerSd}": {
      "get": {
        "summary": "Get user privacy notices",
        "tags": [
          "Consent"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "providerSd",
            "description": "provider self-description in base64.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "consumerSd",
            "description": "consumer self-description in base64.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "your internal id inside your app / database for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/credentials/{id}": {
      "put": {
        "summary": "update credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "credential id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "apiKey",
                    "type": "string",
                    "example": "apiKey"
                  },
                  "key": {
                    "description": "username or key",
                    "type": "string"
                  },
                  "value": {
                    "description": "password or key value",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "get": {
        "summary": "get credential by id",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "credential id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/credentials": {
      "get": {
        "summary": "get credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "create credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "apiKey",
                    "type": "string",
                    "example": "apiKey"
                  },
                  "key": {
                    "description": "username or key",
                    "type": "string"
                  },
                  "value": {
                    "description": "password or key value",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/infrastructure/configurations/{id}": {
      "put": {
        "summary": "update infrastructure configurations",
        "tags": [
          "Infrastructure Configurations"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "credential id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verb": {
                    "description": "the verb of the infrastructure configuration.",
                    "type": "string",
                    "example": "GET"
                  },
                  "data": {
                    "description": "which data is needed",
                    "type": "string"
                  },
                  "infrastructureService": {
                    "description": "the infrastructure service url.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "target resource url.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "get": {
        "summary": "get infrastructure configuration by id",
        "tags": [
          "Infrastructure Configurations"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "infrastructure configuration id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "delete": {
        "summary": "delete infrastructure configuration by id",
        "tags": [
          "Infrastructure Configurations"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "infrastructure configuration id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/infrastructure/configurations": {
      "get": {
        "summary": "get infrastructure configurations",
        "tags": [
          "Infrastructure Configurations"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "create infrastructure configurations",
        "tags": [
          "Infrastructure Configurations"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verb": {
                    "description": "the verb of the infrastructure configuration.",
                    "type": "string",
                    "example": "GET contract"
                  },
                  "data": {
                    "description": "which data is needed",
                    "type": "string"
                  },
                  "infrastructureService": {
                    "description": "the infrastructure service of the infrastructure configuration.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "the target resource url.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/pdi": {
      "get": {
        "summary": "get the iframe url",
        "tags": [
          "PDI"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "privacyNoticeId",
            "description": "privacy notice id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "description": "user id.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users": {
      "post": {
        "summary": "Create a user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string"
                  },
                  "internalID": {
                    "description": "User internal id",
                    "type": "string"
                  },
                  "url": {
                    "description": "url",
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/": {
      "get": {
        "summary": "Get Users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/{id}": {
      "get": {
        "summary": "Get a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "put": {
        "summary": "Update a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string"
                  },
                  "internalID": {
                    "description": "user id from your system",
                    "type": "string"
                  },
                  "url": {
                    "description": "url",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "user id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/import": {
      "post": {
        "summary": "Import users with a csv file",
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Error response"
          },
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "base64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/private/users/register": {
      "post": {
        "summary": "Create a user from the consent",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string"
                  },
                  "internalID": {
                    "description": "User internal id",
                    "type": "string"
                  },
                  "userIdentifier": {
                    "description": "User identifier from consent",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/private/users/app": {
      "post": {
        "summary": "Create a user from the consent to the participant app",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string"
                  },
                  "consentID": {
                    "description": "Consent Id",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/catalog/request": {
      "post": {
        "summary": "Handle catalog request",
        "tags": [
          "DSP Catalog"
        ],
        "requestBody": {
          "description": "Catalog request message body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string",
                    "example": "https://w3id.org/dspace/2024/1/context.json"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string",
                    "example": "dspace:CatalogRequestMessage"
                  },
                  "dspace:filter": {
                    "description": "The filter for the catalog request",
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully handled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "catalog": {
                      "description": "The catalog response",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/catalog/datasets/{id}": {
      "get": {
        "summary": "Get dataset by ID",
        "tags": [
          "DSP Catalog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dataset found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataset": {
                      "description": "The dataset",
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Dependency error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{providerPid}": {
      "get": {
        "summary": "Retrieve contract negotiation details",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "Provider's PID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract negotiation details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the message",
                      "type": "string",
                      "example": "https://w3id.org/dspace/2024/1/context.json"
                    },
                    "@type": {
                      "description": "The type of the message",
                      "type": "string",
                      "example": "dspace:ContractNegotiation"
                    },
                    "dspace:providerPid": {
                      "description": "The PID of the provider",
                      "type": "string",
                      "example": "urn:uuid:dcbf434c-eacf-4582-9a02-f8dd50120fd3"
                    },
                    "dspace:consumerPid": {
                      "description": "The PID of the consumer",
                      "type": "string",
                      "example": "urn:uuid:32541fe6-c580-409e-85a8-8a9a32fbe833"
                    },
                    "dspace:state": {
                      "description": "The state of the contract negotiation",
                      "type": "string",
                      "example": "REQUESTED"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/request": {
      "post": {
        "summary": "Handle contract negotiation request",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "description": "Contract negotiation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:offer": {
                    "description": "The offer being made",
                    "type": "object"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract negotiation request successfully handled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the message",
                      "type": "string",
                      "example": "https://w3id.org/dspace/2024/1/context.json"
                    },
                    "@type": {
                      "description": "The type of the message",
                      "type": "string",
                      "example": "dspace:ContractNegotiation"
                    },
                    "dspace:providerPid": {
                      "description": "The PID of the provider",
                      "type": "string",
                      "example": "urn:uuid:dcbf434c-eacf-4582-9a02-f8dd50120fd3"
                    },
                    "dspace:consumerPid": {
                      "description": "The PID of the consumer",
                      "type": "string",
                      "example": "urn:uuid:32541fe6-c580-409e-85a8-8a9a32fbe833"
                    },
                    "dspace:state": {
                      "description": "The state of the contract negotiation",
                      "type": "string",
                      "example": "REQUESTED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation request format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{providerPid}/request": {
      "post": {
        "summary": "Initiates a contract negotiation with a consumer.",
        "description": "This endpoint is used by a provider to initiate a contract negotiation with a consumer.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contract negotiation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:offer": {
                    "description": "The offer being made",
                    "type": "object"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract negotiation request successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation request format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{providerPid}/events": {
      "post": {
        "summary": "Handles a ContractNegotiationEventMessage from a consumer.",
        "description": "This endpoint processes a ContractNegotiationEventMessage sent by a consumer to accept the Provider's Offer.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The ContractNegotiationEventMessage body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider",
                    "type": "string"
                  },
                  "dspace:eventType": {
                    "description": "The type of event.",
                    "type": "string",
                    "enum": [
                      "dspace:ACCEPTED",
                      "dspace:FINALIZED"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract negotiation event successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation event format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{providerPid}/agreement/verification": {
      "post": {
        "summary": "Verify contract agreement",
        "description": "Handles the reception of a ContractAgreementVerificationMessage sent by a consumer to verify the acceptance of an Agreement.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The ContractAgreementVerificationMessage body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract agreement verification successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract agreement verification format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/{providerPid}/termination": {
      "post": {
        "summary": "Terminates a contract negotiation.",
        "description": "This endpoint is used to terminate a contract negotiation. It requires the providerPid as a path parameter.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The termination request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string",
                    "example": "https://w3id.org/dspace/2024/1/context.json"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string",
                    "example": "dspace:ContractNegotiationTerminationMessage"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for the termination.",
                    "type": "string",
                    "example": "TERMINATION_CODE"
                  },
                  "dspace:reason": {
                    "description": "The reason for the termination.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "REASON_1",
                      "REASON_2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract negotiation termination successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid termination request format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/negotiations/offers": {
      "post": {
        "summary": "Handle contract negotiation offer",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "consumes": [
          "application/json"
        ],
        "requestBody": {
          "description": "Contract negotiation offer body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer",
                    "type": "string"
                  },
                  "dspace:offer": {
                    "description": "The offer being made",
                    "type": "object"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract negotiation offer successfully handled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the message",
                      "type": "string",
                      "example": "https://w3id.org/dspace/2024/1/context.json"
                    },
                    "@type": {
                      "description": "The type of the message",
                      "type": "string",
                      "example": "dspace:ContractNegotiation"
                    },
                    "dspace:providerPid": {
                      "description": "The PID of the provider",
                      "type": "string",
                      "example": "urn:uuid:dcbf434c-eacf-4582-9a02-f8dd50120fd3"
                    },
                    "dspace:consumerPid": {
                      "description": "The PID of the consumer",
                      "type": "string",
                      "example": "urn:uuid:32541fe6-c580-409e-85a8-8a9a32fbe833"
                    },
                    "dspace:state": {
                      "description": "The state of the contract negotiation",
                      "type": "string",
                      "example": "OFFERED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation offer format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/negotiations/{consumerPid}/offers": {
      "post": {
        "summary": "Handles a consumer making an Offer by POSTing a Contract Request Message",
        "description": "This endpoint processes a Contract Request Message sent by a consumer to make an Offer.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The Contract Request Message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer",
                    "type": "string"
                  },
                  "dspace:offer": {
                    "description": "The offer being made",
                    "type": "object"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract negotiation offer successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation offer format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/negotiations/{consumerPid}/agreement": {
      "post": {
        "summary": "Handles a ContractAgreementVerificationMessage from a consumer.",
        "description": "This endpoint processes a ContractAgreementVerificationMessage sent by a consumer to verify the acceptance of an Agreement.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The ContractAgreementVerificationMessage body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:offer": {
                    "description": "The offer being verified.",
                    "type": "object"
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address for the consumer.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract agreement verification successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract agreement verification format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/negotiations/{consumerPid}/events": {
      "post": {
        "summary": "Handles a ContractNegotiationEventMessage for agreement verification.",
        "description": "This endpoint processes a ContractNegotiationEventMessage sent by a consumer to verify the acceptance of an Agreement.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The ContractNegotiationEventMessage body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:eventType": {
                    "description": "The type of event.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract agreement verification event successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation event format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/negotiations/{consumerPid}/termination": {
      "post": {
        "summary": "Handles the termination of a contract negotiation.",
        "description": "This endpoint processes the termination of a contract negotiation initiated by the consumer.",
        "tags": [
          "DSP Contract Negotiation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The termination request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for termination.",
                    "required": false,
                    "type": "string"
                  },
                  "dspace:reason": {
                    "description": "The reason for termination.",
                    "required": false,
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract negotiation termination successfully handled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract negotiation termination format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{providerPid}": {
      "get": {
        "summary": "Retrieves a transfer process by provider PID.",
        "description": "This endpoint retrieves a transfer process using the provider's PID.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transfer process successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the message.",
                      "type": "string"
                    },
                    "@type": {
                      "description": "The type of the message.",
                      "type": "string"
                    },
                    "dspace:providerPid": {
                      "description": "The PID of the provider.",
                      "type": "string"
                    },
                    "dspace:consumerPid": {
                      "description": "The PID of the consumer.",
                      "type": "string"
                    },
                    "dspace:state": {
                      "description": "The state of the transfer process.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transfer process not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/request": {
      "post": {
        "summary": "Handles the reception of a transfer process request from a consumer.",
        "description": "This endpoint processes the reception of a transfer process request from a consumer.",
        "tags": [
          "DSP Transfer Process"
        ],
        "requestBody": {
          "description": "The transfer request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:agreementId": {
                    "description": "The ID of the agreement.",
                    "type": "string"
                  },
                  "dct:format": {
                    "description": "The format of the data.",
                    "type": "string"
                  },
                  "dspace:dataAddress": {
                    "description": "The data address.",
                    "type": "object",
                    "properties": {
                      "@type": {
                        "description": "The type of the data address.",
                        "type": "string"
                      },
                      "dspace:endpointType": {
                        "description": "The type of the endpoint.",
                        "type": "string"
                      },
                      "dspace:endpoint": {
                        "description": "The endpoint.",
                        "type": "string"
                      },
                      "dspace:endpointProperties": {
                        "description": "The endpoint properties.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "@type": {
                              "description": "The type of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:name": {
                              "description": "The name of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:value": {
                              "description": "The value of the endpoint property.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "dspace:callbackAddress": {
                    "description": "The callback address.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transfer process successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the message.",
                      "type": "string"
                    },
                    "@type": {
                      "description": "The type of the message.",
                      "type": "string"
                    },
                    "dspace:providerPid": {
                      "description": "The PID of the provider.",
                      "type": "string"
                    },
                    "dspace:consumerPid": {
                      "description": "The PID of the consumer.",
                      "type": "string"
                    },
                    "dspace:state": {
                      "description": "The state of the transfer process.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{providerPid}/start": {
      "post": {
        "summary": "Handles the reception of a Transfer Start Message sent by a consumer to start a TP.",
        "description": "This endpoint processes the start of a transfer process initiated by the consumer.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer start message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:dataAddress": {
                    "description": "The data address.",
                    "type": "object",
                    "properties": {
                      "@type": {
                        "description": "The type of the data address.",
                        "type": "string"
                      },
                      "dspace:endpointType": {
                        "description": "The endpoint type of the data address.",
                        "type": "string"
                      },
                      "dspace:endpoint": {
                        "description": "The endpoint of the data address.",
                        "type": "string"
                      },
                      "dspace:endpointProperties": {
                        "description": "The endpoint properties of the data address.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "@type": {
                              "description": "The type of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:name": {
                              "description": "The name of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:value": {
                              "description": "The value of the endpoint property.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer start message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{providerPid}/completion": {
      "post": {
        "summary": "Handles the completion of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to complete a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully completed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer completion message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{providerPid}/termination": {
      "post": {
        "summary": "Handles the reception of a Transfer Termination Message sent by a consumer to terminate a TP.",
        "description": "This endpoint processes the termination of a transfer process initiated by the consumer.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer termination message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for the termination.",
                    "type": "string"
                  },
                  "dspace:reason": {
                    "description": "The reasons for the termination.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully terminated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer termination message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{providerPid}/suspension": {
      "post": {
        "summary": "Handles the suspension of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to suspend a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerPid",
            "description": "The PID of the provider.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer suspension message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for the suspension.",
                    "type": "string"
                  },
                  "dspace:reason": {
                    "description": "The reasons for the suspension.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully suspended.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer suspension message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/transfers/{consumerPid}/start": {
      "post": {
        "summary": "Handles the start of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to start a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:dataAddress": {
                    "description": "The data address of the transfer process.",
                    "type": "object",
                    "properties": {
                      "@type": {
                        "description": "The type of the data address.",
                        "type": "string"
                      },
                      "dspace:endpointType": {
                        "description": "The type of the endpoint.",
                        "type": "string"
                      },
                      "dspace:endpoint": {
                        "description": "The endpoint of the data address.",
                        "type": "string"
                      },
                      "dspace:endpointProperties": {
                        "description": "The endpoint properties of the data address.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "@type": {
                              "description": "The type of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:name": {
                              "description": "The name of the endpoint property.",
                              "type": "string"
                            },
                            "dspace:value": {
                              "description": "The value of the endpoint property.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer start message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/transfers/{consumerPid}/completion": {
      "post": {
        "summary": "Handles the completion of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to complete a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer completion message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully completed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer completion message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/transfers/{consumerPid}/termination": {
      "post": {
        "summary": "Handles the termination of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to terminate a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer termination message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for the termination.",
                    "type": "string"
                  },
                  "dspace:reason": {
                    "description": "The reasons for the termination.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully terminated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer termination message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/callback/transfers/{consumerPid}/suspension": {
      "post": {
        "summary": "Handles the suspension of a transfer process by the provider.",
        "description": "This endpoint is used by the provider to suspend a transfer process.",
        "tags": [
          "DSP Transfer Process"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "consumerPid",
            "description": "The PID of the consumer.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The transfer suspension message body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "@context": {
                    "description": "The context of the message.",
                    "type": "string"
                  },
                  "@type": {
                    "description": "The type of the message.",
                    "type": "string"
                  },
                  "dspace:providerPid": {
                    "description": "The PID of the provider.",
                    "type": "string"
                  },
                  "dspace:consumerPid": {
                    "description": "The PID of the consumer.",
                    "type": "string"
                  },
                  "dspace:code": {
                    "description": "The code for the suspension.",
                    "type": "string"
                  },
                  "dspace:reason": {
                    "description": "The reasons for the suspension.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer process successfully suspended.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transfer suspension message format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "payload": {
                      "description": "The invalid payload.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/.well-known/dspace-version": {
      "get": {
        "summary": "Get dataset dspace-version",
        "tags": [
          "DSP Procotol specification"
        ],
        "responses": {
          "200": {
            "description": "Dataset found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "@context": {
                      "description": "The context of the dataset",
                      "type": "string"
                    },
                    "protocolVersions": {
                      "description": "The protocol versions available",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "description": "The version of the protocol",
                            "type": "string"
                          },
                          "path": {
                            "description": "The path to the protocol version",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dataexchange": {
        "type": "object",
        "properties": {
          "contract": {
            "type": "string",
            "description": "the self-description of the contract on which the exchange is based."
          },
          "providerEndpoint": {
            "type": "string",
            "description": "provider data space connector endpoint."
          },
          "purposeId": {
            "type": "string",
            "description": "purpose of the exchange, the service offering who consume the data."
          },
          "resourceId": {
            "type": "string",
            "description": "resource of the exchange, the service offering where the data come from."
          },
          "status": {
            "type": "string",
            "description": "status of the exchange."
          },
          "createdAt": {
            "type": "string",
            "description": "timestamp."
          },
          "updatedAt": {
            "type": "string",
            "description": "timestamp."
          }
        }
      },
      "Catalog": {
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "The endpoint in the catalog."
          },
          "resourceId": {
            "type": "string",
            "description": "id from the catalog."
          },
          "type": {
            "type": "string",
            "description": "dataresource or softwareresource or serviceoffering."
          },
          "enabled": {
            "type": "boolean",
            "description": "if the resource is accessible in the self-description."
          }
        }
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "appKey": {
            "type": "string",
            "description": "The appkey of the dataspace connector.",
            "example": "e6bbb3d733dc083b9d19dae8ed1bb31673379838fef6b88faa309b628f8b6124f2f306978200a90711b72e9d07b3e1d1d211fd219b2ce3ab5269a45fab009038"
          },
          "catalogUri": {
            "type": "string",
            "description": "The uri of the catalog.",
            "example": "https://catalog.api.com/v1/"
          },
          "contractUri": {
            "type": "string",
            "description": "The uri of the contract.",
            "example": "https://contract.api.com/v1/"
          },
          "consentUri": {
            "type": "string",
            "description": "The uri of the consent updated by the consent.",
            "example": "https://consent.api.com/v1/"
          },
          "registrationUri": {
            "type": "string",
            "description": "endpoint of app participant to register user from consent",
            "example": "https://participant.api.com/v1/users/register"
          },
          "endpoint": {
            "type": "string",
            "description": "endpoint of the dataspace connector.",
            "example": "https://connector.com/"
          },
          "PDIUri": {
            "type": "string",
            "description": "endpoint of the origin of PDI http requests.",
            "example": "https://pdi.front.com/"
          },
          "secretKey": {
            "type": "string",
            "description": "your secretKey from the catalog.",
            "example": "hmP5WG7vBFsj1fxNYWyzzO7zgczCB"
          },
          "serviceKey": {
            "type": "string",
            "description": "your secretKey from the catalog.",
            "example": "Gr31PY4J2SRCPdqS5eaGQPE"
          }
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "the Key in the header."
          },
          "value": {
            "type": "string",
            "description": "the value of the key."
          },
          "type": {
            "type": "string",
            "description": "type of the credential, only apiKey supported."
          }
        }
      },
      "InfrastructureConfiguration": {
        "type": "object",
        "properties": {
          "verb": {
            "type": "string",
            "description": "the verb of the infrastructure configuration."
          },
          "data": {
            "type": "string",
            "description": "the data of the infrastructure configuration."
          },
          "infrastructureService": {
            "type": "string",
            "description": "the infrastructure service of the infrastructure configuration."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "internalID": {
            "type": "string",
            "description": "your internal id inside your app / database for the user."
          },
          "email": {
            "type": "string",
            "description": "email of the user in your app / database."
          },
          "userIdentifier": {
            "type": "string",
            "description": "identifier provided by the consent."
          }
        }
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication to access private routes"
    },
    {
      "name": "Consent",
      "description": "Consent routes"
    },
    {
      "name": "Consumer",
      "description": "Consumer webhooks"
    },
    {
      "name": "Data",
      "description": "Data routes"
    },
    {
      "name": "Data-Exchange",
      "description": "Data Exchange webhooks and routes"
    },
    {
      "name": "Self-Description",
      "description": "Self Description of a data space connector"
    },
    {
      "name": "Provider",
      "description": "Provider webhook"
    },
    {
      "name": "Catalogs",
      "description": "Catalogs of a data space connector"
    },
    {
      "name": "Configuration",
      "description": "Configuration routes"
    },
    {
      "name": "Credentials",
      "description": "Credentials routes"
    },
    {
      "name": "Infrastructure Configurations",
      "description": "Infrastructure Configurations routes"
    },
    {
      "name": "PDI",
      "description": "PDI routes"
    },
    {
      "name": "Users",
      "description": "Catalogs of a data space connector"
    },
    {
      "name": "DSP Catalog",
      "description": "IDSA Catalog Protocol"
    },
    {
      "name": "DSP Contract Negotiation",
      "description": "IDSA Contract Negotiation Protocol"
    },
    {
      "name": "DSP Transfer Process",
      "description": "IDSA Transfer Process Protocol"
    },
    {
      "name": "DSP Procotol specification",
      "description": "IDSA Catalog Protocol"
    }
  ]
}